{"ast":null,"code":"import \"core-js/modules/es.array.unshift.js\";\nimport Store from \"@/store\";\nimport { onMounted, ref } from \"vue\";\nimport M from \"materialize-css\";\nexport default {\n  __name: 'CreateTask',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    let name;\n    let description;\n    const date_input = ref();\n    function create() {\n      var new_task = {\n        date: date_input.value.value,\n        name: name,\n        description: description\n      };\n      Store.state.tasks.unshift(new_task);\n      Store.state.sortByDate();\n      Store.state.create_mode = !Store.state.create_mode;\n      Store.state.current = new_task;\n      Store.state.current_id = 0;\n    }\n    function update() {\n      var update_id = Store.state.current_id;\n      var updated_task = {\n        date: date_input.value.value,\n        name: Store.state.current.name,\n        description: Store.state.current.description\n      };\n      Store.state.tasks[update_id] = updated_task;\n      Store.state.sortByDate();\n      Store.state.create_mode = !Store.state.create_mode;\n      Store.state.edit_mode = !Store.state.edit_mode;\n    }\n    onMounted(() => {\n      M.Datepicker.init(date_input.value, \"autoClose\");\n    });\n    const __returned__ = {\n      get name() {\n        return name;\n      },\n      set name(v) {\n        name = v;\n      },\n      get description() {\n        return description;\n      },\n      set description(v) {\n        description = v;\n      },\n      date_input,\n      create,\n      update,\n      get Store() {\n        return Store;\n      },\n      onMounted,\n      ref,\n      get M() {\n        return M;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":";AAmEA,OAAOA,KAAK,MAAM,SAAS;AAC3B,SAASC,SAAS,EAAEC,GAAG,QAAQ,KAAK;AACpC,OAAOC,CAAC,MAAM,iBAAiB;;;;;;;IAC/B,IAAIC,IAAI;IACR,IAAIC,WAAW;IACf,MAAMC,UAAU,GAAGJ,GAAG,EAAE;IAExB,SAASK,MAAM,GAAG;MAChB,IAAIC,QAAQ,GAAG;QACbC,IAAI,EAAEH,UAAU,CAACI,KAAK,CAACA,KAAK;QAC5BN,IAAI,EAAEA,IAAI;QACVC,WAAW,EAAEA;MACf,CAAC;MACDL,KAAK,CAACW,KAAK,CAACC,KAAK,CAACC,OAAO,CAACL,QAAQ,CAAC;MACnCR,KAAK,CAACW,KAAK,CAACG,UAAU,EAAE;MACxBd,KAAK,CAACW,KAAK,CAACI,WAAW,GAAG,CAACf,KAAK,CAACW,KAAK,CAACI,WAAW;MAClDf,KAAK,CAACW,KAAK,CAACK,OAAO,GAAGR,QAAQ;MAC9BR,KAAK,CAACW,KAAK,CAACM,UAAU,GAAG,CAAC;IAC5B;IAEA,SAASC,MAAM,GAAG;MAChB,IAAIC,SAAS,GAAGnB,KAAK,CAACW,KAAK,CAACM,UAAU;MACtC,IAAIG,YAAY,GAAG;QACjBX,IAAI,EAAEH,UAAU,CAACI,KAAK,CAACA,KAAK;QAC5BN,IAAI,EAAEJ,KAAK,CAACW,KAAK,CAACK,OAAO,CAACZ,IAAI;QAC9BC,WAAW,EAAEL,KAAK,CAACW,KAAK,CAACK,OAAO,CAACX;MACnC,CAAC;MACDL,KAAK,CAACW,KAAK,CAACC,KAAK,CAACO,SAAS,CAAC,GAAGC,YAAY;MAC3CpB,KAAK,CAACW,KAAK,CAACG,UAAU,EAAE;MACxBd,KAAK,CAACW,KAAK,CAACI,WAAW,GAAG,CAACf,KAAK,CAACW,KAAK,CAACI,WAAW;MAClDf,KAAK,CAACW,KAAK,CAACU,SAAS,GAAG,CAACrB,KAAK,CAACW,KAAK,CAACU,SAAS;IAChD;IAEApB,SAAS,CAAC,MAAM;MACdE,CAAC,CAACmB,UAAU,CAACC,IAAI,CAACjB,UAAU,CAACI,KAAK,EAAE,WAAW,CAAC;IAClD,CAAC,CAAC","names":["Store","onMounted","ref","M","name","description","date_input","create","new_task","date","value","state","tasks","unshift","sortByDate","create_mode","current","current_id","update","update_id","updated_task","edit_mode","Datepicker","init"],"sources":["/Users/vrezhmikayelyan/Desktop/todo/src/components/CreateTask.vue"],"sourcesContent":["<template>\n  <div class=\"row task_view\">\n    <form class=\"col s6\">\n      <div class=\"row\">\n        <div class=\"input-field col s12\" v-if=\"Store.state.edit_mode\">\n          <input\n            type=\"text\"\n            id=\"task_name\"\n            v-model=\"Store.state.current.name\"\n          />\n          <label for=\"task_name\" class=\"active\">Task Name</label>\n        </div>\n        <div class=\"input-field col s12\" v-else>\n          <input type=\"text\" id=\"task_name\" v-model=\"name\" />\n          <label for=\"task_name\">Task Name</label>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"input-field col s12\" v-if=\"Store.state.edit_mode\">\n          <textarea\n            id=\"description\"\n            class=\"materialize-textarea\"\n            v-model=\"Store.state.current.description\"\n          ></textarea>\n          <label for=\"description\" class=\"active\">Description</label>\n        </div>\n        <div class=\"input-field col s12\" v-else>\n          <textarea\n            id=\"description\"\n            class=\"materialize-textarea\"\n            v-model=\"description\"\n          ></textarea>\n          <label for=\"description\">Description</label>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"input-field col s12\" v-if=\"Store.state.edit_mode\">\n          <input\n            type=\"text\"\n            class=\"datepicker\"\n            ref=\"date_input\"\n            id=\"date\"\n            v-model=\"Store.state.current.date\"\n          />\n          <label for=\"date\" class=\"active\">Date</label>\n        </div>\n        <div class=\"input-field col s12\" v-else>\n          <input type=\"text\" class=\"datepicker\" ref=\"date_input\" id=\"date\" />\n          <label for=\"date\">Date</label>\n        </div>\n      </div>\n      <div class=\"row\">\n        <a\n          class=\"waves-effect waves-light btn\"\n          @click=\"update\"\n          v-if=\"Store.state.edit_mode\"\n          >update</a\n        >\n        <a class=\"waves-effect waves-light btn\" @click=\"create\" v-else\n          >Create</a\n        >\n      </div>\n    </form>\n  </div>\n</template>\n\n<script setup>\nimport Store from \"@/store\";\nimport { onMounted, ref } from \"vue\";\nimport M from \"materialize-css\";\nlet name;\nlet description;\nconst date_input = ref();\n\nfunction create() {\n  var new_task = {\n    date: date_input.value.value,\n    name: name,\n    description: description,\n  };\n  Store.state.tasks.unshift(new_task);\n  Store.state.sortByDate();\n  Store.state.create_mode = !Store.state.create_mode;\n  Store.state.current = new_task;\n  Store.state.current_id = 0;\n}\n\nfunction update() {\n  var update_id = Store.state.current_id;\n  var updated_task = {\n    date: date_input.value.value,\n    name: Store.state.current.name,\n    description: Store.state.current.description,\n  };\n  Store.state.tasks[update_id] = updated_task;\n  Store.state.sortByDate();\n  Store.state.create_mode = !Store.state.create_mode;\n  Store.state.edit_mode = !Store.state.edit_mode;\n}\n\nonMounted(() => {\n  M.Datepicker.init(date_input.value, \"autoClose\");\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.task_view {\n  width: 1000px;\n  display: flex;\n  height: 500px;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: column;\n  position: relative;\n  top: 50%;\n  transform: translateY(-50%);\n  form {\n    margin: 0 auto;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}